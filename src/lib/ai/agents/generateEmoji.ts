import { StringOutputParser } from "@langchain/core/output_parsers";
import { PromptTemplate } from "@langchain/core/prompts";
import { RunnableSequence } from "@langchain/core/runnables";
import type { ChatOllama } from "@langchain/ollama";
import type { ChatOpenAI } from "@langchain/openai";

const stringParser = new StringOutputParser();

export const generateEmoji = async (llm: ChatOllama | ChatOpenAI, title: string) => {
  const emojiGenerationChain = createEmojiGenerationChain(llm, title);
  const emoji = await emojiGenerationChain.invoke({});
  return emoji;
};

export const createEmojiGenerationChain = (llm: ChatOllama | ChatOpenAI, title: string) => {
  llm.temperature = 0;

  return RunnableSequence.from([
    PromptTemplate.fromTemplate(titleGenerationPrompt(title)),
    llm,
    stringParser,
  ]).withConfig({
    runName: "EmojiGenerator",
  });
};

const titleGenerationPrompt = (title: string) => `
You are an AI agent that generates emojis for titles. Your task is to generate an emoji that best represents the title. The emoji should be relevant to the title and should convey the main idea of the title. You can use the title to generate the emoji. The emoji should be a single emoji character. Do not return multiple emojis or any other characters. The emoji should be appropriate and relevant to the title. Do not return anything that isn't an emoji.
There are several examples attached for your reference inside the below \`example\` XML block. Inside the \`example\` XML block, there will be a \`title\` XML block that contains the title. The emoji generated by the AI agent will be inside the \`emoji\` XML block. You can refer to these examples to understand the task better. Respond only with the emoji character inside an \`emoji\` XML block.

<example>
<title>
SvelteKit: A Modern Web Framework
</title>

<emoji>
🌐
</emoji>
</example>

<example>
<title>
The Origins of the Word "Joke"
</title>

<emoji>
🤣
</emoji>
</example>

<example>
<title>
Cheese: A Dairy Product Made from Milk
</title>

<emoji>
🧀
</emoji>
</example>

Everything below is the actual data you will be working with. Good luck!

<title>
${title}
</title>
`;
